<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="kopo.poly.persistance.mapper.IUserInfoMapper">

    <!-- 회원 가입하기(회원정보 등록하기) -->
    <insert id="insertUserInfo" parameterType="UserInfoDTO">
        INSERT INTO USER_INFO
            (
                USER_ID,
                USER_NAME,
                PASSWORD,
                EMAIL,
                ADDR1,
                ADDR2,
                REG_ID,
                CHG_ID,
                USER_ROLE
            )
        VALUES(
            #{user_id},
            #{user_name},
            #{password},
            #{email},
            #{addr1},
            #{addr2},
            #{user_id},
            #{user_id},
            #{user_role}
            )

    </insert>

    <!-- 이메일로 회원 가입 중복 방지하기 -->
   <select id="getUserExists" parameterType="UserInfoDTO" resultType="UserInfoDTO">
       SELECT CASE WHEN COUNT(*) = 1 THEN 'Y' ELSE 'N' END AS EXISTS_YN
       FROM USER_INFO
       WHERE EMAIL = #{email}
    </select>


    <!-- 로그인을 위해 아이디와 비밀번호가 일치하는지 확인하기 -->
    <select id="getUserLoginCheck" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT *
        FROM USER_INFO
        WHERE USER_ID = #{user_id}
          AND PASSWORD = #{password}
    </select>

    <!-- 로그인을 위해 아이디와 비밀번호가 일치하는지 확인하기 -->
    <select id="forgetPassword" parameterType="UserInfoDTO" resultType="UserInfoDTO">
        SELECT *
        FROM USER_INFO
        WHERE USER_ID = #{user_id}
          AND EMAIL = #{email}
    </select>

    <!--비밀번호 수정 쿼리 -->
    <update id="updatePassword" parameterType="UserInfoDTO">
        UPDATE USER_INFO SET
                          PASSWORD = #{password}

        WHERE
            USER_ID = #{user_id}

    </update>

    <select id="idCheck" parameterType="String" resultType="int">
        SELECT COUNT (USER_ID)
        FROM USER_INFO
        where USER_ID = #{user_id}
    </select>

</mapper>
